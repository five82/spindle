# Spindle - Automated disc ripping, encoding, and media library management
# REQUIRES: uv package manager (https://docs.astral.sh/uv/)
# Install uv: curl -LsSf https://astral.sh/uv/install.sh | sh
# End users: uv tool install git+https://github.com/five82/spindle.git
# Development: uv pip install -e ".[dev]"
# Usage: spindle [command] (tool install) or uv run spindle [command] (dev)

[project]
name = "spindle"
version = "0.1.0"
description = "Automated disc ripping, encoding, and media library management"
authors = [{name = "Ken", email = "ken@example.com"}]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "click>=8.1.7",
    "pydantic>=2.5.0",
    "httpx>=0.25.0",
    "rich>=13.7.0",
    "tomli>=2.0.1",
    "watchdog>=3.0.0",
    "plexapi>=4.15.0",
    "sqlite-utils>=3.35.0",
    "python-daemon>=3.0.0",
    "defusedxml>=0.7.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "isort>=5.12.0",
    "bandit>=1.7.5",
    "pip-audit>=2.6.0",
    "twine>=4.0.0",
]

[project.scripts]
spindle = "spindle.cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.black]
line-length = 88
target-version = ['py311']

[tool.isort]
profile = "black"
line_length = 88

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "W", "C90", "I", "N", "UP", "YTT", "S", "BLE", "FBT", "B", "A", "COM", "C4", "DTZ", "T10", "EM", "EXE", "FA", "ISC", "ICN", "G", "INP", "PIE", "T20", "PYI", "PT", "Q", "RSE", "RET", "SLF", "SLOT", "SIM", "TID", "TCH", "INT", "ARG", "PTH", "TD", "FIX", "ERA", "PD", "PGH", "PL", "TRY", "FLY", "NPY", "AIR", "PERF", "FURB", "LOG", "RUF"]
ignore = [
    "S101",     # Use of assert (common in tests)
    "T201",     # Print found (OK for CLI tools)
    "PLR0913",  # Too many arguments (sometimes necessary)
    "PLR2004",  # Magic value comparison (pragmatic)
    "G004",     # f-string in logging (more readable)
    "TRY401",   # Redundant exception in logging.exception
    "FBT001",   # Boolean positional argument (OK with keyword args)
    "FBT002",   # Boolean default positional (OK with keyword args)
    "BLE001",   # Blind except Exception (sometimes needed)
    "S608",     # SQL injection (false positives with parameterized queries)
    "S603",     # Subprocess without shell=True check
    "S607",     # Starting process with partial path
    "PLC0415",  # Import outside top-level (sometimes needed)
    "PLR0915",  # Too many statements (complexity metrics)
    "PLR0912",  # Too many branches (complexity metrics)
    "PLR0911",  # Too many return statements (complexity metrics)
    "C901",     # Too complex (complexity metrics)
    "E501",     # Line too long (handled by formatter)
    "ARG001",   # Unused function argument (callbacks)
    "ARG002",   # Unused method argument (interfaces)
    "TRY300",   # Try-except-return (sometimes cleaner)
    "TRY301",   # Abstract raise to inner function (not always clearer)
    "PERF401",  # List comprehension (readability over perf)
    "PTH123",   # Path.open instead of open (both OK)
    "PTH110",   # Path.exists (both OK)
    "B904",     # raise from in except (not always needed)
    "SIM102",   # Nested if (sometimes clearer)
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
filterwarnings = [
    # Ignore ResourceWarnings from pytest's garbage collection of SQLite connections
    # These are artifacts from the test framework, not actual resource leaks
    # Our production code properly uses context managers for all database operations
    "ignore:unclosed database.*:ResourceWarning",
    "ignore:unclosed file.*:ResourceWarning",
]

[dependency-groups]
dev = [
    "types-defusedxml>=0.7.0.20250822",
]
